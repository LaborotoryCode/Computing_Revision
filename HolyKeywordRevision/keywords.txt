bit; A binary digit, the smallest unit of data in a computer. Takes on the value of either 0 or 1.
byte; A unit of data made up of 8 bits.
computer; A device that can receive data, process data according to a sequence of instructions and produce the processed data as a result.
computer architecture; A description of how a computer is designed and built to function, including how its parts are designed, organised and connected.
data; Information that is used in a computer program.
gibibyte; 1024^3 bytes
gigabyte; 10^9 bytes
kibibyte; 1024 bytes
kilobyte; 1000 bytes
megabyte; 10^6 bytes
mebibyte; 1024^2 bytes
tebibyte; 1024^4 bytes
terabyte; 10^12 bytes
address; A number used to locate a byte in the memory
address bus; A hardware component that transfers the required memory location from processor to memory: it is uni-directional.
arithmetic logic unit; The part of the processor that processes data by performing basic mathematical and logical operations.
bus; A collection of wires that transport data from one part of a computer to another.
central processing unit; A hardware component that processes data and follows instructions, consisting of an ALU and CU.
control unit; The part of the processor that follows instructions and decides when data should be stored, received or transmitted by different parts of the computer.
data bus; A hardware component that transfers data between memory and processor: it is bi-directional.
executes; Another word for when a processor 'runs' instructions, aka: Following or performing said instructions.
hard disk; Secondary storage where data is stored on rigid rotating disks coated with magnetic material.
input; Data or instructions that the computer receives for processing.
input device; A hardware device that allows users to enter data and instructions into a computer. Examples are keyboards, mice, scanners, touch screens and microphones.
magnetic; A type of drive stores data on a magnetic material that can be read or written by a magnetic head. An example is a hard disk.
memory; Something that stores data, instructions and the results of processing for immediate use in a computer.
optical; A type of drive that stores data as very small pits/indendations that can be read or written by a laser. Example: Digital Versatile Disc (DVD).
output; Intermediate or final results produced by the computer in the form of processed data.
output device; A hardware device used to display, project or print processed data from a computer so that it can be used or understood by people using the computer. Examples are monitors, speakers and printers.
processor registers; Extremely fast but small data storage spaces that are used directly by the ALU and control unit. They are physically located inside the processor that cannot be changed without changing the processor.
random access memory; A type of memory where data and instructions are stored temporarily so that they can be quickly accessed by the processor when needed, aka 'main memory'.
read-only memory; Memory where data and instructions that rarely need to change or would be needed for a computer to start up are stored. Data stored cannot be easily changed and remains there regardless of whether the power supply is switched on or off.
secondary storage; A type of memory stores large amounts of data that will not be lost when the power supply is interrupted.
software; A series of instructions, also known as a 'program'.
solid-state; A type of drive stores data in electronic circuits called “flash memory” that have no moving parts. Examples include memory cards.
volatile; Data that is lost once the power supply to the computer is interrupted.

algorithm; A set of step-by-step instructions for solving a problem.
decomposition; The technique of breaking down a complex problem or process into smaller and more manageable parts.
generalisation; The technique of replacing two or more similar problems or solutions with a single, more general problem or solution.
incremental approach; An approach to solving a problem in which quantitative features of the input or output that are causing the problem to be too large to handle are identified. Sometimes, the solution to a small version of the problem with one or more of these features reduced can be found and gradually extended to larger versions of the problem. Each gradual extension of the solution is a separate sub-problem.
input; Data used by an algorithm that can affect what is required for correct output.
modular approach; An approach to solving a problem in which simple examples of the problem are solved manually and tasks of different natures are identified. Usually, these tasks can be separated from each other to become distinct sub-problems.
output; Results produced by an algorithm.
pattern recognition; The technique of identifying similarities among two or more items.
solution; The algorithm that always gives correct outputs when provided with valid inputs.
sub-problem; A problem whose solution contributes to the solution of a bigger problem.

branch; A sequence of instructions that serves as one option out of two or more choices.
construct; An algorithm structure with exactly one entry point and one exit point.
data; A parallelogram-shaped flowchart symbol, which represents the step of either receiving input data from outside the algorithm using the INPUT command or producing output from within the algorithm using the OUTPUT command.
decision; A diamond-shaped flowchart symbol, which represents a step involving a question. The outgoing arrows represent the possible outcomes to the question and are usually labeled “Yes” and “No”. Only one of these outgoing arrows should be followed when performing the algorithm.
dry run; The process of running through a set of steps manually. 
flowchart; A visual presentation of an algorithm using symbols to show the flow of a sequence of steps.
flow lines; An indication of the order in which steps are followed in a flowchart, aka 'arrows'.
initialised; When a value is stored or assigned to a variable for the first time, the variable is...
iteration construct; A construct for repeating instructions while a particular condition is true.
pseudo-code; A description of an algorithm using natural language (such as English) mixed with sequence, selection and iteration constructs.
process; A rectangular flowchart symbol, which represents a step involving an action or operation.
selection construct; A construct for choosing between two or more branches based on a particular condition.
sequence construct; A construct for performing multiple instructions in a fixed order.
symbol; Special shape used to represent an action of a step in a flowchart.
terminator; A rectangular symbol with rounded corners (pill-shaped). It represents the beginning or end of a sequence of steps and usually contains either the START or STOP(END) command.
test data; Input data that is used to perform a dry run.
trace table; The tabulation of the change in variables as well as the output of an algorithm when performing a dry run.
variable; In a flowchart or pseudo-code, this is a named storage space for a value that can be changed while the algorithm is running.

Boolean; A common data type in programming languages that represents either 'true' or 'false'.
command line interface; A means of interacting with a program such that commands are given as lines of text.
comment; A piece of source code that explains the program but is ignored by the Python interpreter.
compiler; A code translator program that translates source code into machine code completely before running the compiled program.
constant; A name with an associated value that usually cannot be changed while the program is running.
graphical user interface; A means of interacting with a program such that commands are given using visual elements such as windows, icons, menus and mouse pointers. 
floating-point number; A common data type in programming languages that represents real numbers that contain a fractional part.
identifier; A sequence of characters that follows certain rules and can be used as a variable name.
instruction set; A set of basic commands or instructions that a processor can understand directly, represented in byte form.
integer; A common data type in programming languages that represents whole numbers, positive, negative, and zero included.
interactive mode; A feature of Python that allows source code to be entered, line by line, for the interpreter to run immediately and show the results.
interpreter; A code translator program that translates source code into machine code while the interpreted program is running.
machine code; Instructions that can run directly on a computer’s processor.
keyword; A word that has a special meaning in a programming language and cannot be used as an identifier.
list; A data type in Python for storing multiple values in a sequence, sometimes referred to as an 'array'.
naming convention; A set of generally accepted rules for how identifiers or names should be chosen.
program; A set of instructions written to perform specific tasks on a computer.
programming language; A language designed for humans to communicate instructions to computers.
source code; Instructions written in a programming language that both humans and computers can understand.
string; A common data type in programming languages that represents text as a sequence of characters or symbols.
syntax; Rules that determine how the words and symbols in a valid instruction are arranged.
syntax error; The result of incorrect source code that  does not follow the rules of the language.
syntax highlighting; A feature that displays different parts of source code differently (such as using different colours and fonts) in a text editor based on the rules of the programming language to make reading easier.
variable; A name with an associated value that can be changed while the program is running.
argument; An additional value that can be supplied as input to a function call.
array; A sequence where all the items have the same size and are arranged consecutively in memory: informally also used as a synonym for list.
body; The sequence of statements inside a user-defined function
escape code; A sequence of characters used to input characters that are either difficult to type out as part of a literal or would cause a syntax error if not treated specially. For example, to add a newline character to a string, we can use "\n".
function; A set of instructions assigned to a name that can be used again later.
function call; The process of assigning arguments to new variables and running the instructions assigned to a function.
global variable; A variable that is created outside of a user-defined function and is readable from the user-defined function's body if its name is not hidden by a local variable.
indentation; The number of spaces at the start of each line of source code.
literal; The format for representing a value directly in source code.
local variable; A variable that is created inside a user-defined function and can only be used in the user-defined function's body.
nested function call; The process of using the return value of one function call as an argument for another function call.
parameter; A special variable in a user-defined function that an argument is assigned to when the user-defined function is called.
return instruction; An instruction that ends the function immediately and treats the original function call as the provided return value.
return value; The output of a function, or the value that a function call is treated as, after the instructions assigned to the function are completed.
signature; A unique identifier for a user-defined function, indicating its name and parameters.
type casting; The process of converting a value of one data type to another.
user-defined function; A function provided by the user of a programming language.
binary operator; An operator that takes in exactly two values. 
compound statement; A statement that can contain multiple statements as its components.
concatenation; The action of joining two sequences to make a longer sequence.
control flow statement; A programming instruction that changes the order in which other instructions are run.
floor division; A division operation that rounds down to the nearest integer.
loop; A set of instructions or commands that are repeated until a condition is met.
immutable; A data type cannot be changed once created. Examples include integers, floats, booleans, strings, and tuples.
index; An integer value for the position of a value in a sequence.
index operator; An operator for returning a value in a sequence. 
operator; A symbol for performing instructions like a function but using a different syntax.
sequence; Any data type for storing multiple values in order: usually a list, string or range.
slice operator; An operator for returning a sequence (not a value) by extracting values from a sequence.
statement; An element of source code that represents a complete instruction in a programming language.
structured programming language; A programming language that either encourages or is limited to the use of sequence, selection and iteration constructs that have exactly one entry point and one exit point.
character; A unit of information for strings, usually a symbol, letter or digit.

check digit; A digit or letter that is added to a sequence of digits to detect errors in manual input.
deploy code; The fifth and final stage of program development. This is the stage where the program is actually rolled out and used by its intended audience. Some of the tasks that can be performed under this stage include: training users to use the program; transitioning from an old program or system to a new program; and evaluating the effectiveness of the program in solving the problem and considering any changes that might increase its usability or effectiveness.
gather requirements; The first stage of program development. The goal of this stage is to determine the nature of the problem, why a program is needed and what the program is expected to do.
method; A function that is associated with a value. 
module; A collection of variables and functions that need to be loaded before they can be used.
plan solutions;  The second stage of program development. The goal of this stage is to consider the options available before any code is written, and to choose an algorithm based on the resources available. Some of the tasks that can be done include: manually solving different simplified examples of the problem and generalising the steps; trying different ways to break down the problem into smaller parts; comparing the problem to other problems that have been solved before and identifying which algorithms can be used; estimating the amount of effort or time needed needed to write the code; and writing possible algorithms using either flowcharts or pseudo-code.
replacement field; A placeholder denoted by a set of curly braces that will be replaced with an argument using the str.format() method.
test and refine code; The fourth stage of program development. Some possible reasons the code may require further refinement are: the programmer may have made mistakes in translating the planned algorithm into code or may have forgotten to consider exceptional cases where the input would need to be treated specially; the solution-planning stage may not have been performed properly, resulting in an unsuitable or incomplete algorithm; or the requirement-gathering stage may have been incomplete, resulting in code that does not actually solve the problem.
test cases; Sets of inputs and the corresponding set of expected outputs for a particular program used to verify whether the program works as intended.
testing; A process by which defects in a program can be detected.
write code; The third stage of program development. The goal of this stage is to write code that performs the algorithm as planned in the previous stage as efficiently as possible.

boundary conditions; Situations where input data is at the limit of what the program is designed to cope with or where special handling is required.
bug; A defect in a program that causes it to behave in an unintended manner.
crash; When a program suddenly stops due to an error.
data validation; The process of ensuring that the input data supplied to a system satisfies a set of rules such that it is sensible, complete and within acceptable boundaries.
debugging; The process of identifying and removing defects from a program.
error conditions; Situations where input data would normally be rejected by the program.
format check; The process of ensuring that input data matches a required arrangement or pattern.
hang; When a program is unresponsive due to an error.
length check; The process of ensuring that input data is not too short or too long.
logic errors; Errors that cause the output of a program to be different from what is expected and usually do not cause the program to crash or hang immediately. They occur due to the use of an incorrect or incomplete algorithm. They are detected while the program is being run.
normal conditions; Situations where input data follows what is expected during normal use of the program.
presence check; The process of ensuring that all the required inputs are provided.
range check; The process of ensuring that input data is within the required range of values.
run-time errors; Errors that occur while a program is running, usually causing the program to crash or hang. They occur due to the incorrect use of commands, input data that has not been properly validated or conditions occurring outside of the program’s control (such as running out of memory). They are detected while the program is being run.
syntax errors; Errors that result from incorrect source code that does not follow the rules of the language. They occur due to spelling mistakes or the incorrect sequence of symbols in source code. They are detected when the compiler or interpreter tries to translate the source code to machine code.
testing in chunks or parts; A common debugging technique. This means to decompose the program into smaller parts and test the parts one at a time. This allows us to narrow down the possible locations of any bugs and reduce the amount of code that we need to study at any one time. We can do this by commenting out code that we are not testing, or by putting each part in its own function.
intermittent print statements; A common debugging technique. By doing this to output the value of important variables inside a loop, we are able to get valuable information of how the variables change over time, just like what we were able to do with trace tables for flowcharts.

access control; The ability of a computer to control a user’s access to data and resources, also known as 'authorisation'.
administrator; A special user who can override the permissions for almost any file or folder.
administrator rights; The ability of a user to perform tasks related to authentication and authorisation, such creating and removing user accounts, resetting passwords and overriding file permissions.
application; Software designed for users to perform specific tasks.
authentication; The process of verifying the identity of a user.
authentication factor; The category of evidence that is used for authentication: something the user knows (e.g. password) or owns (e.g. mobile phone), or something that is measured from a physical part of the user (e.g. thumbprint).
backups; Copies of data that are made in case the original is damaged or lost. Making regular instances of these of data will help to prevent the loss of data in the event of data corruption.
biometrics; A type of authentication based on the measurement of human physical characteristics, such as fingerprint or voice. 
data corruption; Something that occurs when computer data is made unusable by errors or alterations.
data loss; If corrupted data cannot be recovered or replaced, this occurs.
encryption; The process of encoding a message so that a secret key is needed to decode the data. It is often used to protect data from unauthorised access by allowing only authorised users to have the secret key.
firewall; A device or computer program that prevents unauthorised access to or from a private network.
identity theft; The impersonation of another person to steal personal details such as name and identity number for fraudulent purposes.
intranet; A private network that only authorised users within an organisation can access.
permissions; The settings to control the ability of users to view or make changes to the contents of a file or folder.
privacy; The ability to keep specific data or resources from being known by others.
privacy policy; A set of rules and practices followed by an organisation regarding the collection, protection and use of personal or private data provided by users.
security token; A device that is used specifically for authentication purposes.
traffic; The transmission of data over a network.
two-factor authentication; A type of authentication that uses evidence from both something the user knows (password, or personal identification number PIN) and something the user owns (one-time password, OTP from a security token or mobile phone).
unauthorised access; A situation where data owned by someone is used by someone else without permission. They can occur due to poor authentication, poor access control or authorisation, and poor understanding of privacy policies.
uninterruptible power supply; A device that provides enough emergency power for a computer to properly shut down in case of a power failure.
anti-spyware; Software to detect, remove and stop spyware from running.
anti-virus; Software to detect, remove and stop viruses and other malware from running.
citation; A statement to acknowledge and provide credit to the author(s) of reproduced materials in published books and articles.
cookie; A small file used by websites to store personal information on a user’s web browser. Although usually not malicious in nature, they are sometimes misused to collect personal information about users.
copyright; The legal right of owners to control the use and distribution of their intellectual property.
copyright infringement; The use or distribution of copyrighted work without the permission of the copyright owner. To avoid this, check and follow the websites’ terms and conditions, limit reproduction of a copyrighted work to 10% (for education purposes only), and consider using public domain material instead.
crack; A program that modifies proprietary software so that the software cannot detect that it is being used illegally.
free and open-source software; Software where users are given freedom to change, copy, study and share the software and its source code.
freeware; Proprietary software that is available for use at no cost.
intellectual property; Creations of the mind that have value but can exist purely as data with no physical form.
licence; The official description of activities that are authorised or forbidden by the owner of intellectual property.
malware; Software that is intentionally used to damage, disrupt or gain unauthorised access to a computer system, aka 'Malicious software'.
open courseware; Higher-education course materials such as videos and notes created by universities and distributed for free on the Internet.
operating system; Software that is designed to support a computer's basic functions.
pharming; The interception of requests sent from a computer to a legitimate website and redirection to a fake website to steal personal data or credit card details. The stolen data can then be used for unauthorised access to even more of the victim's data. It is difficult to detect as the fake website uses the same address as the real website.
phishing; The use of emails and fake websites that appear to be from reputable companies in order to steal personal information such as passwords and credit card numbers from users. The stolen data can then be used for unauthorised access to even more of the victim's data.
plagiarism; The act of passing off someone else’s original work as one’s own.
proprietary software; Commercial software for which most of the legal protections under copyright are retained.
public domain software; Software where the legal protections that are typically granted to intellectual property have either expired, been surrendered or are simply inapplicable.
shareware; Demonstration software that is distributed for free but for a specific evaluation period only.
signature; An aspect of malware, unique evidence that is used to detect a known version of some malicious software.
software piracy; The crime of copying, distributing and/or using proprietary software in a manner that is not permitted by its licence.
spamming; The mass distribution of unwanted messages or advertising to email addresses which are collected from sources such as public mailing lists, social networking sites, company websites and personal blogs.
spyware; A hidden program that secretly collects personal information about its users and transmits this information to attackers without the users’ knowledge. The collected data can then be used for unauthorised access to even more of the victim's data. 
Trojan horse; A computer program that pretends to be a harmless file or useful application. Once it is run, it does something harmful such as giving intruders unauthorised access to the computer instead.
virus; A computer program that attaches itself to a normally harmless program and modifies it. When the modified program is run by a user, it attaches copies of itself to other programs it can find, thus ‘infecting’ them.
worm; A computer program that runs automatically and attempts to spread by sending copies of itself to other computers. It does not need to attach itself to an existing program.

American Standard Code for Information Interchange; A character encoding standard that defines how numbers are used to represent common characters that can be typed using a keyboard, such as upper-case and lower-case letters. It is 7 bits long and only 128 distinct characters can be represented. They are often expressed in hexadecimal digits. Also known by its acronym 'ASCII'.
binary number system; A number system made up of two distinct digits, 0 and 1, used by computers to store numbers. Also called the base-2 system.
denary number system; A number system that is made up of 10 unique digits. It is also called the base-10 system, or the decimal number system.
hexadecimal number system; A number system made up of 16 unique digits, 0-9 and A-F. A-F represent 10-15 respectively. Also called the base-16 system.
Internet Protocol address; A sequence of bytes that is used to identify a computer or device on the Internet.  The two versions used today are IPv4, which has 4 bytes and is represented by 4 denary numbers separated by dots, and IPv6, which has 16 bytes and is represented by 16 groups of 4 hexadecimal digits separated by colons.
leading zero; A zero digit to the left of the first non-zero digit in a number.
Media Access Control address; A sequence of bytes (usually permanent in nature) that is used to identify a particular network interface controller. It has 6 bytes, usually shown as a sequence of 6 hexadecimal numbers (two digits each) separated by hyphens or colons.
network address; A unique name or sequence of bytes that is used to identify a computer or device in a network.
RGB colour codes; A method of representing colours on a computer as a combination of different intensities of red, green and blue light. Each light intensity value is stored in a single byte, which contains 8 bits, and is usually represented using a two-digit hexadecimal number.
Unicode; A character encoding standard that can be used to represent characters in languages other than English. The number of bits used to represent each character can vary from 8 to 32 bits depending on the encoding scheme used. This flexibility means that over a million unique characters from many different written languages can be represented.

Boolean; A type of value often used to determine the status of a system or a logical condition in an algorithm. They can be expressed in 0 or 1, False or True, Off or On, Low or High (voltage), and No or Yes.
logic circuit; A circuit that consists of only one logic gate or multiple logic gates connected together.
logic circuit diagram; A visual representation using symbols to show how the component logic gates are connected together in a logic circuit.
logic gate; An electrical circuit that performs logical operations based on one or more inputs and produces a single output.
logic operation; An operation that acts on binary inputs to produce an output according to the laws of Boolean logic.
Sum-of-Product; One method to construct a Boolean statement from a truth table, in which each set of inputs that gives a '1' output (connected with AND operators) are 'OR'ed together.
truth table; A table that shows the resulting output for every possible combination of inputs.

absolute cell reference; Used when we do not want the cell reference in formulas to change when copied to other cells. To make one, type a dollar sign ($) before the column letter or row number that should not change.
cell; The rectangular space located in a particular column and row.
cell address; The location name for a cell formed by its column name and row number.
cell reference; A description of a cell that can be used in a spreadsheet formula.
constant; A non-calculated value that is entered directly into a cell and does not change.
data analysis; The stage in the data life cycle in which the processed data is studied to answer questions and to make decisions.
data collection; The stage in the data life cycle in which data may be collected automatically by a computer or manually by performing interviews, making observations, conducting surveys, and so on.
data distribution; The stage in the data life cycle where the results need to be distributed and shared with the relevant parties.
data life cycle; Something that has 4 stages: To collect, process, analyse and distribute data.
data processing; The stage in the data life cycle in which collected data is checked for accuracy. Raw data may be imperfect due to input errors, missing data or contradictory data. It must be processed to ensure that the analysis done later will produce results that make sense.
field; A column of data in a spreadsheet
field name; A description of data stored in a particular column or field, aka a 'column heading'.
formula; Something that performs calculations on the data in a spreadsheet, it may contain functions, operators as well as cell and range references.
range address; The location name for a rectangular range of cells formed by the top-left cell's address, a colon (:) and the bottom-right cell's address.
range reference; A description of multiple cells that can be used in a spreadsheet formula.
record; Set of related data that describes a person or thing, usually refers to a row of data in a spreadsheet.
spreadsheet; An electronic worksheet used to manage and manipulate data arranged in columns and rows. Columns are labelled with letters and rows with numbers. 
conditional formatting; A spreadsheet feature which automatically formats a cell based on given criteria. 
goal seek; The process of adjusting the value in one cell so that another cell can reach a particular value, usually done after defining the relationships between cells in a spreadsheet.
lookup table; An array or data structure that is searched through in order to find a particular value.
lookup value; A value to search for in order to find a particular row or column.
relational operators; Operators used to compare two values. The outputs are either TRUE or FALSE. The logical operators include less than (<), less than or equal to (<=), greater than (>), greater than or equal to (>=), equal to (=), not equal to (<>). This forms logical values.
rule; The criterion for conditional formatting, specifies a range of cells, a condition to be tested for and the formatting to apply if the condition is true.
what-if; <keyword> questions can be answered due to a spreadsheet's ability to perform automatic recalculation of all affected cells if any referenced cells are changed. This feature can be used to predict the outcomes that may occur when particular values are changed.
Currency; A spreadsheet data type used for money. Typically displayed with a currency symbol (can be specified) and two decimal places.
Date; A spreadsheet data type used for dates. Can be displayed and entered in a variety of styles.
General; A spreadsheet data type used for data with no specific type.
Logical Value; A spreadsheet data type used for Boolean data. Must be either TRUE or FALSE.
Number; A spreadsheet data type used for numbers. The number of decimal places to display and the type of digital separator can be specified.
Percentage; A spreadsheet data type used for rates, ratios and proportions. Typically displayed and entered as a number with a “%” appended.
Text; A spreadsheet data type used for textual information. Typically displays exactly what is entered.
Time; A spreadsheet data type used for times and durations. Can be displayed and entered in a variety of styles.

AND; (logical1, logical2, …): Returns TRUE when all of the given logical values or values in the given range/cell references are TRUE, otherwise, returns FALSE.
AVERAGE; (number1, number2 …): Returns the mean or average of the given numbers or numbers on the given range/cell references.
CEILING.MATH; Returns number rounded up to the nearest whole number.
COUNT; (range1, range2, …): Returns the number of cells that contain numbers, currencies, dates, times and percentages in the given range references. Empty cells and cells with text or logical values are not counted.
COUNTA; (range1, range2, …): Returns the number of non-empty cells in the given range references. Empty cells are not counted while cells with any other data type are counted.
COUNTBLANK; (range): Returns the number of empty cells in range.
COUNTIF; (range, criteria): Returns the number of cells in range that are equal to or satisfy the condition in criteria.
FLOOR.MATH; (number): Returns number rounded down to the nearest whole number.
HLOOKUP; (lookup_value, table_array, row_index_num, range_lookup): Looks for lookup_value in the first row of table_array and returns the value in row_index_num of the matching column. If range_lookup is TRUE or is left out, the function performs an approximate match. If range_lookup is FALSE, the function performs an exact match.
IF; (logical_test, value_if_true, value_if_false): Returns value_if_true when logical_test is TRUE and value_if_false when logical_test is FALSE.
LARGE; (range, k): Returns the k-th largest number in range.
LEFT; (text, num_chars): Returns the first num_chars characters of the text value text. IF num_chars is left out, the function returns only the first character of text.
LEN; (text): Returns the number of characters in the text value text. 
MAX; (number1, number2, …): Returns the largest number out of the given numbers or the numbers in the given range/cell references.
MEDIAN; (number1, number2, …): Returns the median of the given numbers or numbers in the given range/cell references.
MID; (text, start_num, num_chars): Returns num_chars characters starting from position start_num of the text value text.
MIN; (number1, number2, …): Returns the smallest number out of the given numbers or the numbers in the given range/cell references.
MOD; (number, divisor): Returns the remainder when number is divided by divisor.
MODE.SNGL; (number1, number2, …): Returns the most frequently occurring or repeated value in the given numbers or the given range/cell references.
NOT; (logical): Returns TRUE when logical is FALSE and FALSE when logical is TRUE.
OR; (logical1, logical2, …): Returns TRUE when any of the given logical values or values in the given range/cell references is TRUE, otherwise, returns FALSE.
POWER; (number, power): Returns number raised to the exponent power.
QUOTIENT; (number, divisor): Returns the quotient when number is divided by divisor.
RAND; (): Returns a random number greater than or equal to 0 and less than 1
RANDBETWEEN; (lowest, highest): Returns a random number between the whole numbers lowest and highest (both inclusive)
RIGHT; (text, num_chars): Returns the last num_chars characters of the text value text. IF num_chars is left out, the function returns only the last character of text.
ROUND; (number, num_digits): Returns number rounded to num_digits decimal places
SMALL; (range, k): Returns the k-th smallest number in range. 
SQRT; (number): Returns the square root of number.
SUM; (number1, number2, …): Returns the total of the given numbers or numbers in the given range/cell references
SUMIF; (range, criteria, sum_range): Returns the total of the numbers in sum_range where the corresponding value in range is equal to or satisfies the condition in criteria. If sum_range is left out, then range is used as sum_range.
TODAY; (): Returns the current date.
VLOOKUP; (lookup_value, table_array, col_index_num, range_lookup): Looks for lookup_value in the first column of table_array and returns the value in col_index_num of the matching row. If range_lookup is TRUE or is left out, the function performs an approximate match. If range_lookup is FALSE, the function performs an exact match.

bandwidth; The average number of bits of data a network can transmit from a source to a destination over the network in one second, usually measured in megabits per second (Mbps) or gigabits per second (Gbps).
computer network; A system of two or more computers that are connected together by a transmission medium for the exchange of data.
demodulation; The process of converting transmitted signals into digital data.
Ethernet; The most commonly used wired network protocol for local and metropolitan area networks.
local area network; A network of computing devices connected within a small geographical area, typically within the same building, such as a home, school or office.
metropolitan area network; A network of computing devices typically spanning across two or more buildings within the same town or city.
modem; A device that converts digital data into a form suitable for transmission, and vice versa.
modulation; The process of converting digital data into a form suitable for transmission.
network bridge; A device that constructs a single network by connecting two similar networks together. 
network hub; A device that transmits received packets to all connected devices.
network switch; A device that constructs a single network by connecting multiple similar networks together. 
network interface controller; A hardware component that provides the hardware interface to enable the transfer of data between a device and a network.
network protocol; Set of standards and rules that govern how two or more devices communicate over a network.
packet; A unit of broken-up data containing a header with information about the source and destination addresses that are needed for transmission.
port number; A number that is used together with an IP address to uniquely identify a program that is running on a network. All numbers are assigned in a range from 0 to 65535.
router; A device that forwards packets between separate networks.
service set identifier; A 32-byte string that identifies a wireless access point (WAP) and all devices connected to it. All wireless devices connected to the same WAP must use the same identifier.
transmission medium; The means of connecting two or more computers together, such as using copper cables, radio waves or light pulses, so that they may exchange data and interact with each other.
Wi-Fi; The most common wireless network protocol, which uses radio waves to transmit data.
wide area network; A network of computing devices covering large-scale geographical area, typically across multiple geographical locations.
wireless access point; A piece of network hardware that provides a connection between wireless devices up to 100 metres away and can connect to wired networks. 
wireless network; A network of devices in which signals are transmitted without the use of a physical medium. The transmission is in the form of electromagnetic waves, such as radiowaves and microwaves. 
wired network; A network of devices connected by a physical medium, such as cables. Data transfer is typically faster and more secure in this kind of network. However as the number of devices and the distance between devices increase, the cost of setting up the network increases as well.
bus topology; A network topology in which a common cable or backbone known as the bus connects all the devices. The bus is a medium that allows transmission of data.
checksum; A calculated value that is used to determine the integrity of transmitted data. The data and this value are then sent together. At the destination, this value is recalculated and compared to the sent value. If the value of the received value matches the sent value, the data was transmitted correctly. If they differ, an error has occurred.
client;  A computer that initiates a connection to a server to request for resources and services to perform operations.
client-server network; A computer network in which one or more higher-capacity computers will act as servers while the remaining computers are clients.
parity check; An error-checking technique which uses a parity bit to detect errors. This parity bit is an additional bit which can either be 0 or 1, depending on whether an odd or even parity system is used. In the odd parity system, the total number of 1 bits in each packet (including the parity bit) should be odd. In the even parity system, the total number of 1 bits in each packet (including the parity bit) should be even. 
peer-to-peer network; A type of network where all computers are considered as equals and the load is distributed among all computers. Each computer in the network is able to act as both a client and a server, communicating directly with other computers.
ring topology; A network topology in which each computer is connected to two other computers in a ring formation. All the data is passed around the same direction. If a failure occurs in the cable or if a computer breaks down, the entire network will fail to function.
server; A computer that shares resources with and responds to requests from devices and other servers on the network. Resources and services include providing central storage of files, sharing hardware such as printers, and controlling logins and network access.
star topology; A network topology in which network hardware such as a hub or switch is at the centre of the network with connections to all the other computers. The computers will send data to the central network hardware and the hardware forwards the data to the destination.
network topology; Something that describes the physical layout of a network.